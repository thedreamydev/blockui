{
  "name": "wallet-address-01",
  "type": "registry:component",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "path": "components/wallet-address-01.tsx",
      "content": "\"use client\";\r\n\r\nimport { Check, Copy } from \"lucide-react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { useCopy } from \"@/registry/default/hooks/use-copy\";\r\nimport { shortenAddress } from \"@/registry/default/lib/utils\";\r\n\r\nconst WalletAddress01 = () => {\r\n  const { copied, copy } = useCopy();\r\n\r\n  const address = \"0x1F6Ac473bfE26A84AcF4e255156B7816245b17aa\";\r\n  const shortenedAddress = shortenAddress(address);\r\n\r\n  return (\r\n    <div>\r\n      {shortenedAddress}\r\n\r\n      <Button variant=\"ghost\" onClick={() => copy(address)}>\r\n        {copied ? <Check /> : <Copy />}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WalletAddress01;\r\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "hooks/use-copy.ts",
      "content": "\"use client\";\r\n\r\nimport { useState } from \"react\";\r\n\r\ntype UseCopyReturn = {\r\n  copied: boolean;\r\n  copy: (text: string) => Promise<boolean>;\r\n};\r\n\r\nexport function useCopy(duration = 1500): UseCopyReturn {\r\n  const [copied, setCopied] = useState<boolean>(false);\r\n\r\n  const copy = async (text: string) => {\r\n    try {\r\n      await navigator.clipboard.writeText(text);\r\n      setCopied(true);\r\n      setTimeout(() => setCopied(false), duration);\r\n      return true;\r\n    } catch (err) {\r\n      console.error(\"Failed to copy text: \", err);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return {\r\n    copied,\r\n    copy,\r\n  };\r\n}\r\n",
      "type": "registry:hook",
      "target": ""
    },
    {
      "path": "lib/utils.ts",
      "content": "import { clsx, type ClassValue } from \"clsx\";\r\nimport { twMerge } from \"tailwind-merge\";\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs));\r\n}\r\n\r\n/**\r\n * Shortens a wallet address to a more readable format.\r\n *\r\n * @param {string} address - The wallet address to shorten. Defaults to an empty string if not provided.\r\n * @returns {string} - The shortened address or the original address if it's 9 characters or fewer.\r\n *\r\n * Example:\r\n *   shortenAddress(\"0x1234567890abcdef1234567890abcdef12345678\")\r\n *   returns \"0x1234...678\"\r\n */\r\nexport function shortenAddress(address: string = \"\"): string {\r\n  return address.length > 9\r\n    ? `${address.slice(0, 6)}...${address.slice(-4)}`\r\n    : address;\r\n}\r\n",
      "type": "registry:lib",
      "target": ""
    }
  ]
}