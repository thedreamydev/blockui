{
  "name": "token-selector-01",
  "type": "registry:component",
  "dependencies": [
    "@web3icons/react",
    "lucide-react"
  ],
  "registryDependencies": [
    "dialog",
    "input",
    "scroll-area"
  ],
  "files": [
    {
      "path": "components/token-selector-01.tsx",
      "content": "\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { TokenIcon } from \"@web3icons/react\";\r\nimport { ChevronDown, Search, TrendingUp } from \"lucide-react\";\r\n\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogTrigger,\r\n} from \"@/components/ui/dialog\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\ninterface Token {\r\n  symbol: string;\r\n  name: string;\r\n  address?: string;\r\n}\r\n\r\nconst popularTokens: Token[] = [\r\n  { symbol: \"ETH\", name: \"Ethereum\" },\r\n  { symbol: \"USDC\", name: \"USDC\" },\r\n  { symbol: \"USDT\", name: \"Tether\" },\r\n  { symbol: \"DAI\", name: \"Dai\" },\r\n];\r\n\r\nconst allTokens: Token[] = [\r\n  { symbol: \"ETH\", name: \"Ethereum\" },\r\n  { symbol: \"USDC\", name: \"USDC\", address: \"0xW6a0...eB98\" },\r\n  { symbol: \"USDT\", name: \"Tether\", address: \"0xdAX9...1vf7\" },\r\n  { symbol: \"DAI\", name: \"Dai\" },\r\n  { symbol: \"WBTC\", name: \"Wrapped Bitcoin\" },\r\n  { symbol: \"UNI\", name: \"Uniswap\" },\r\n  { symbol: \"LINK\", name: \"Chainlink\" },\r\n  { symbol: \"MKR\", name: \"Maker\" },\r\n  { symbol: \"AAVE\", name: \"Aave\", address: \"0xW6a0...eB98\" },\r\n  { symbol: \"COMP\", name: \"Compound\" },\r\n  { symbol: \"SNX\", name: \"Synthetix\" },\r\n  { symbol: \"CRV\", name: \"Curve DAO Token\" },\r\n  { symbol: \"SUSHI\", name: \"Sushi\" },\r\n  { symbol: \"YFI\", name: \"yearn.finance\" },\r\n  { symbol: \"BAT\", name: \"Basic Attention Token\" },\r\n  { symbol: \"MATIC\", name: \"Polygon\", address: \"0xdAX9...1vf7\" },\r\n  { symbol: \"1INCH\", name: \"1inch\" },\r\n  { symbol: \"GRT\", name: \"The Graph\" },\r\n  { symbol: \"ENJ\", name: \"Enjin Coin\" },\r\n  { symbol: \"ZRX\", name: \"0x\", address: \"0xW6a0...eB98\" },\r\n  { symbol: \"BNT\", name: \"Bancor\" },\r\n  { symbol: \"LRC\", name: \"Loopring\" },\r\n  { symbol: \"REN\", name: \"Ren\", address: \"0xdAX9...1vf7\" },\r\n];\r\n\r\ntype TokenSelectorModalProps = {\r\n  children: React.ReactNode;\r\n  onSelectToken: (token: string) => void;\r\n};\r\n\r\nconst TokenSelectorModal = ({\r\n  children,\r\n  onSelectToken,\r\n}: TokenSelectorModalProps) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleSelectToken = (token: string) => {\r\n    onSelectToken(token);\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onOpenChange={setOpen}>\r\n      <DialogTrigger asChild>{children}</DialogTrigger>\r\n      <DialogContent className=\"!rounded-lg max-w-[400px] p-0 gap-2\">\r\n        <DialogHeader className=\"px-4 pt-4\">\r\n          <DialogTitle>Select a token</DialogTitle>\r\n        </DialogHeader>\r\n\r\n        <div className=\"px-4\">\r\n          <div className=\"flex items-center h-10 px-4 my-1 bg-accent rounded-full\">\r\n            <div className=\"flex items-center justify-between flex-shrink-0 text-muted-foreground\">\r\n              <Search className=\"size-5\" />\r\n            </div>\r\n            <Input\r\n              className=\"flex-1 h-full px-2 bg-transparent border-none focus:ring-0 focus-visible:ring-0\"\r\n              placeholder=\"Search a token\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <ScrollArea className=\"h-[586px] relative\">\r\n          <div className=\"px-5 py-2 flex items-center gap-2\">\r\n            {popularTokens.map((token) => (\r\n              <button\r\n                key={token.symbol}\r\n                className=\"px-4 py-3 flex flex-col justify-center items-center flex-1 gap-1 bg-accent rounded-lg cursor-pointer\"\r\n                onClick={() => handleSelectToken(token.symbol)}\r\n              >\r\n                <div className=\"flex-shrink-0 size-6\">\r\n                  <TokenIcon\r\n                    symbol={token.symbol.toLowerCase()}\r\n                    className=\"size-6 rounded-full\"\r\n                    variant=\"background\"\r\n                  />\r\n                </div>\r\n                <span className=\"text-sm\">{token.symbol}</span>\r\n              </button>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"px-5 py-2 flex items-center gap-2 text-base text-muted-foreground bg-background sticky top-0\">\r\n            <div className=\"flex-shrink-0\">\r\n              <TrendingUp className=\"size-4\" />\r\n            </div>\r\n            <p className=\"font-medium text-sm\">Tokens by 24H volume</p>\r\n          </div>\r\n\r\n          <div className=\"px-3 pb-3 flex flex-col gap-2\">\r\n            {allTokens.map((token) => (\r\n              <button\r\n                key={token.symbol}\r\n                className={cn(\r\n                  \"flex items-center gap-2 p-2 rounded-lg\",\r\n                  \"hover:bg-accent cursor-pointer\"\r\n                )}\r\n                onClick={() => handleSelectToken(token.symbol)}\r\n              >\r\n                <div className=\"flex-shrink-0 size-10\">\r\n                  <TokenIcon\r\n                    symbol={token.symbol.toLowerCase()}\r\n                    className=\"size-10 rounded-full\"\r\n                    variant=\"background\"\r\n                  />\r\n                </div>\r\n                <div className=\"flex flex-col items-start\">\r\n                  <h1 className=\"font-lg font-medium\">{token.name}</h1>\r\n                  <div className=\"flex gap-2 text-muted-foreground text-sm\">\r\n                    <p>{token.symbol}</p>\r\n                    <p className=\"text-muted-foreground/80\">{token.address}</p>\r\n                  </div>\r\n                </div>\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </ScrollArea>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst TokenSelector = () => {\r\n  const [selectedToken, setSelectedToken] = useState(\"ZRX\");\r\n\r\n  return (\r\n    <div className=\"flex justify-center items-center\">\r\n      <TokenSelectorModal onSelectToken={setSelectedToken}>\r\n        <button className=\"flex items-center gap-2 px-3 py-2 bg-transparent border rounded-xl\">\r\n          <TokenIcon\r\n            symbol={selectedToken.toLowerCase()}\r\n            className=\"size-6 rounded-full\"\r\n            variant=\"background\"\r\n          />\r\n          <span className=\"text-sm\">{selectedToken}</span>\r\n          <ChevronDown className=\"size-4 opacity-60\" />\r\n        </button>\r\n      </TokenSelectorModal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TokenSelector;\r\n",
      "type": "registry:component",
      "target": ""
    }
  ]
}