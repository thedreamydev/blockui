{
  "name": "transaction-history-02",
  "type": "registry:component",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "components/transaction-history-02.tsx",
      "content": "import { ArrowDownLeft, ArrowRightLeft, ArrowUpRight } from \"lucide-react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\ninterface Transaction {\r\n  type: \"buy\" | \"sell\" | \"transfer\";\r\n  status: \"completed\" | \"pending\" | \"failed\";\r\n  amount: number;\r\n  symbol: string;\r\n  price: number;\r\n  timestamp: Date;\r\n  hash: string;\r\n}\r\n\r\ntype TransactionProps = {\r\n  transaction: Transaction;\r\n};\r\n\r\nconst Transaction: React.FC<TransactionProps> = ({ transaction }) => {\r\n  const getTransactionStyles = (type: Transaction[\"type\"]) => {\r\n    switch (type) {\r\n      case \"buy\":\r\n        return {\r\n          icon: ArrowUpRight,\r\n          bgColor: \"bg-green-200\",\r\n          iconColor: \"text-green-600\",\r\n        };\r\n      case \"sell\":\r\n        return {\r\n          icon: ArrowDownLeft,\r\n          bgColor: \"bg-red-200\",\r\n          iconColor: \"text-red-600\",\r\n        };\r\n      case \"transfer\":\r\n        return {\r\n          icon: ArrowRightLeft,\r\n          bgColor: \"bg-blue-200\",\r\n          iconColor: \"text-blue-600\",\r\n        };\r\n    }\r\n  };\r\n\r\n  const formatPrice = (price: number) => {\r\n    return new Intl.NumberFormat(\"en-US\", {\r\n      style: \"currency\",\r\n      currency: \"USD\",\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n    }).format(price);\r\n  };\r\n\r\n  const formatTimestamp = (timestamp: Date) => {\r\n    return (\r\n      timestamp.toLocaleDateString(\"en-US\", {\r\n        month: \"short\",\r\n        day: \"2-digit\",\r\n        year: \"numeric\",\r\n      }) +\r\n      \" â€¢ \" +\r\n      timestamp.toLocaleTimeString(\"en-US\", {\r\n        hour: \"numeric\",\r\n        minute: \"2-digit\",\r\n        hour12: true,\r\n      })\r\n    );\r\n  };\r\n\r\n  const transactionStyles = getTransactionStyles(transaction.type);\r\n  const TransactionIcon = transactionStyles.icon;\r\n\r\n  return (\r\n    <div\r\n      key={transaction.hash}\r\n      className=\"w-full px-3 py-2 rounded-md group hover:bg-accent cursor-pointer flex items-center justify-between gap-12\"\r\n    >\r\n      <div className=\"flex items-center gap-3\">\r\n        <div\r\n          className={cn(\r\n            \"w-10 h-10 rounded-sm group-hover:scale-110 transition-transform duration-300\",\r\n            \"flex items-center justify-center\",\r\n            transactionStyles.bgColor,\r\n            transactionStyles.iconColor\r\n          )}\r\n        >\r\n          <TransactionIcon className=\"size-5\" />\r\n        </div>\r\n\r\n        <div className=\"space-y-1\">\r\n          <h1 className=\"font-semibold capitalize\">{transaction.type}</h1>\r\n          <p className=\"text-sm text-muted-foreground\">\r\n            Tx: {transaction.hash}\r\n          </p>\r\n          <p className=\"text-sm text-muted-foreground font-mono\">\r\n            {formatTimestamp(transaction.timestamp)}\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"space-y-1 flex flex-col items-end\">\r\n        <h1 className=\"font-semibold\">\r\n          <span>{transaction.amount}</span>\r\n          <span className=\"text-sm ml-1\">{transaction.symbol}</span>\r\n        </h1>\r\n        <h3 className=\"text-sm font-medium text-muted-foreground\">\r\n          {formatPrice(transaction.amount * transaction.price)}\r\n        </h3>\r\n        <div\r\n          className={cn(\r\n            \"text-sm font-mono capitalize px-1 rounded-sm\",\r\n            transaction.status === \"completed\" &&\r\n              \"text-green-600 bg-green-200 dark:text-green-400 dark:bg-green-900\",\r\n            transaction.status === \"pending\" &&\r\n              \"text-amber-600 bg-amber-200 dark:text-amber-400 dark:bg-amber-900\",\r\n            transaction.status === \"failed\" &&\r\n              \"text-red-600 bg-red-200 dark:text-red-400 dark:bg-red-900\"\r\n          )}\r\n        >\r\n          {transaction.status}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Dummy Data Array\r\nconst transactions: Transaction[] = [\r\n  {\r\n    type: \"buy\",\r\n    status: \"completed\",\r\n    amount: 0.5,\r\n    symbol: \"BTC\",\r\n    price: 43250.0,\r\n    timestamp: new Date(\"2024-08-03T10:30:00\"),\r\n    hash: \"0x1a2b3...5e6f\",\r\n  },\r\n  {\r\n    type: \"sell\",\r\n    status: \"failed\",\r\n    amount: 2.5,\r\n    symbol: \"ETH\",\r\n    price: 2650.0,\r\n    timestamp: new Date(\"2024-08-03T09:15:00\"),\r\n    hash: \"0x7g8h9...1k2l\",\r\n  },\r\n  {\r\n    type: \"transfer\",\r\n    status: \"pending\",\r\n    amount: 10,\r\n    symbol: \"SOL\",\r\n    price: 125.0,\r\n    timestamp: new Date(\"2024-08-02T16:20:00\"),\r\n    hash: \"0x3m4n5...7q8r\",\r\n  },\r\n];\r\n\r\nconst TransactionHistoryCard = () => {\r\n  return (\r\n    <div className=\"flex flex-col gap-4 p-3 mx-auto\">\r\n      {transactions.map((transaction) => (\r\n        <Transaction key={transaction.hash} transaction={transaction} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionHistoryCard;\r\n",
      "type": "registry:component",
      "target": ""
    }
  ]
}